import React, { ReactElement } from 'react';
import Head from 'next/head';
import { NextPageWithLayout } from './_app';
import { Layout } from '@/components/layouts/Layout';
import {
  Button,
  FormControl,
  Flex,
  Heading,
  Input,
  Stack,
  Text,
  useColorModeValue,
  FormLabel,
  VStack,
  FormErrorMessage,
} from '@chakra-ui/react';
import { useForm } from 'react-hook-form';
import { useRouter } from 'next/router';
import { useSupabaseClient } from '@supabase/auth-helpers-react';
import { Database } from '@/types/generated';

type UpdatePasswordFormInputs = {
  password: string;
  confirmPassword: string;
};

export const UpdatePassword: NextPageWithLayout = () => {
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<UpdatePasswordFormInputs>({
    defaultValues: {
        password: "",
        confirmPassword: ""
    },
    mode: "onChange"
  });
  const [submissionError, setSubmissionError] = React.useState<string | null>(null);
  const router = useRouter();
  const supabaseClient = useSupabaseClient<Database>();

  const onSubmit = async (data: any) => {
    console.log('onSubmit - data -', data);
    setSubmissionError(null);
    try {
      const response = await supabaseClient.auth.updateUser({
        password: data.password
      });
      response?.error?.message ? setSubmissionError(response.error.message) : router.push('/signin');
    } catch(error: any) {
        setSubmissionError(error.message);
    }
    console.log('onSubmit');
  }

    return (
    <>
      <Head>
        <title>Request Password Reset</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex
        minH={'60vh'}
        align={'center'}
        justify={'center'}>
        <Stack
            spacing={4}
            w={'full'}
            maxW={'md'}
            bg={useColorModeValue('white', 'gray.700')}
            rounded={'xl'}
            boxShadow={'lg'}
            p={6}
            my={12}>
            <Heading lineHeight={1.1} fontSize={{ base: '2xl', md: '3xl' }}>
            Enter new password
            </Heading>
            <form onSubmit={handleSubmit(onSubmit)}>
                <FormControl id="password" isRequired>
                    <FormLabel>Password</FormLabel>
                    <Input
                        type="password"
                        id="password"
                        {...register('password')}
                    />
                </FormControl>
                <FormControl id="confirmPassword" isRequired isInvalid={!!errors.confirmPassword}>
                    <FormLabel>Confirm Password</FormLabel>
                    <Input 
                        type="password"
                        id="confirmPassword"
                        {...register('confirmPassword',  {
                            validate: (value) => {
                                console.log('validate');
                                if (watch('password') !== value) {
                                    console.log("passwords should match");
                                    return "Passwords should match";
                                }
                                
                            }
                        })}
                    />
                    <FormErrorMessage>
                        {errors.confirmPassword && errors.confirmPassword.message}
                    </FormErrorMessage>
                </FormControl>
                <VStack spacing={6} align={'center'}>
                    {submissionError && <p>{submissionError}</p>}
                    <Button
                        type="submit"
                        isDisabled={!!errors.confirmPassword}
                        bg={'blue.400'}
                        color={'white'}
                        _hover={{
                        bg: 'blue.500',
                        }}>
                        Submit
                    </Button>
                </VStack>
            </form>
        </Stack>
      </Flex>
    </>
  )
}

UpdatePassword.getLayout = function getLayout(page: ReactElement) {
  return (
    <Layout>
      {page}
    </Layout>
  )
}

export default UpdatePassword;